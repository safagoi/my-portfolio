---
import githubIcon from "/icons/github-icon.svg";

export interface Props {
	title: string;
    imgUrl: string;
    description: string;
    githubUrl: string;
}

const { title, imgUrl, description, githubUrl } = Astro.props;
---

<div class="project">
    <h5>{title}</h5>

    <div class="project-content">
        <img
            src={imgUrl}
            alt=""
        />
        <div class="description">
            <p>
                {description}
            </p>

            <button id="github-button" class="button-icon" data-github={githubUrl}>
                <span>Repository</span>
                <img src={githubIcon} alt="" srcset="">
            </button>
        </div>
    </div>
</div>

<script>
    const githubButton = document.getElementById("github-button") as HTMLButtonElement;
    const githubUrl = githubButton.dataset.github;

    githubButton.addEventListener('click', onGithubButtonClick);

    function onGithubButtonClick(): void {
        window.open(githubUrl, '_blank');
    }
</script>

<style lang="scss">
    .project {
        max-width: 40rem;
        min-width: 15rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: white;
        box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.387);
        border-radius: 10px;
        padding: 1rem;

        h5 {
            font-size: 1.3rem;
            font-weight: 500;
            cursor: pointer;
            transition: transform 0.3s ease-out;

            &:hover {
                transform: translateY(-2px);
            }
        }

        .project-content {
            display: grid;
            grid-template-columns: 10rem auto;
            grid-template-rows: 10rem;
            gap: 1rem;

            @media (max-width: 600px) {
                /* Estilos para pantallas peque√±as */
                grid-template-columns: 1fr;
                grid-template-rows: 12rem 10rem;
            }

            img {
                border: 1px solid rgb(212, 202, 202);
                border-radius: 10px;
                width: 100%;
                height: 100%;
                object-fit: cover;
                cursor: pointer;
                transition: transform 0.3s ease-out;

                &:hover {
                    transform: translateY(-2px);
                }
            }

            .description {
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                gap: 0.25rem;

                p {
                    overflow-y: hidden;
                    text-overflow: ellipsis;
                }

                button {
                    align-self: flex-end;                   
                }
            }
        }
    }
</style>