---
import githubIcon from "/icons/github-icon.svg";

export interface Props {
    id: string;
	title: string;
    imgUrl: string;
    description: string;
    githubUrl: string;
}

const { id, title, imgUrl, description, githubUrl } = Astro.props;
---

<div class="project" data-id={id} >
    <h5>{title}</h5>

    <div class="project-content">
        <img
            src={imgUrl}
        />
        <div class="description">
            <p>
                {description}
            </p>
            
            <button data-id={`button-github-${id}`} class="button-icon button-github">
                <span>Repository</span>
                <img src={githubIcon}>
            </button>
        </div>
    </div>
</div>

<script define:vars={{id, githubUrl}}>
    const projectCardElement = document.querySelector(`.project[data-id="${id}"]`);
    const githubButton = projectCardElement.querySelector(".project-content > .description > button");
    
    githubButton.addEventListener('click', () => {
        window.open(githubUrl, '_blank');
    })
</script>

<style lang="scss">
    .project {
        max-width: 40rem;
        min-width: 15rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: white;
        box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.387);
        border-radius: 10px;
        padding: 1rem;

        h5 {
            font-size: 1.3rem;
            font-weight: 500;
            cursor: pointer;
            transition: transform 0.3s ease-out;

            &:hover {
                transform: translateY(-2px);
            }
        }

        .project-content {
            display: grid;
            grid-template-columns: 10rem auto;
            grid-template-rows: 10rem;
            gap: 1rem;

            @media (max-width: 600px) {
                /* Estilos para pantallas peque√±as */
                grid-template-columns: 1fr;
                grid-template-rows: 12rem 10rem;
            }

            img {
                border: 1px solid rgb(212, 202, 202);
                border-radius: 10px;
                width: 100%;
                height: 100%;
                object-fit: cover;
                cursor: pointer;
                transition: transform 0.3s ease-out;

                &:hover {
                    transform: translateY(-2px);
                }
            }

            .description {
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                
                p {
                    display: -webkit-box;
                    -webkit-line-clamp: 6;
                    -webkit-box-orient: vertical;
                    overflow: hidden;
                    text-overflow: ellipsis;
                }

                button {
                    align-self: flex-end;
                    
                    img {
                        width: 1rem;
                    }
                }
            }
        }
    }
</style>